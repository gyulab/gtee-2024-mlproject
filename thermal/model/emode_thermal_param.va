// VerilogA for ML_HV, ML_HV_emode, veriloga

`include "constants.vams"
`include "disciplines.vams"

module ML_HV_dmode_thermal(d, g, s);


inout d, g, s;
electrical d, g, s;

//****** Parameters L and W ********
parameter real W = 2;
parameter real L = 0.6;
parameter MinVg = -6.0 ;
parameter normVg = 0.05555555555555555 ;
parameter MinVd = -0.15 ;
parameter normVd = 0.0823 ;
parameter MinTemperature = 25 ;
parameter normTemperature = 0.016666666666666666 ;
parameter MinI = -14.614393726401689 ;
parameter normI =0.0975145951626748;
parameter vth =0;
parameter real Temp = 25; //set on cadence as variable, 25, 55, 85 Celcius

parameter MinVg_cgd = -6.0 ;
parameter normVg_cgd = 0.05555555555555555 ;
parameter MinVd_cgd = -6.0 ;
parameter normVd_cgd = 0.05555555555555555 ;
parameter MinLg_cgd = 0.6 ;
parameter normLg_cgd = 0 ;
parameter MinO_cgd = -13.926054483271312 ;
parameter normO_cgd =1.4486107458852509 ;

parameter MinVg_cgs = -6.0 ;
parameter normVg_cgs = 0.05555555555555555 ;
parameter MinVd_cgs = -6.0 ;
parameter normVd_cgs = 0.05555555555555555 ;
parameter MinLg_cgs = 0.6 ;
parameter normLg_cgs = 0 ;
parameter MinO_cgs = -13.08359343161434 ;
parameter normO_cgs =2.886734269461609;


real Vg, Vd, Vs, Vgs, Vds, Lg, Id, Cgg, Cgs,Cgd, Vgd, temp;
real y, y_cgg, y_cgs, y_cgd, yvth;
real Vgs_cgg, Vgs_cgs, Vgs_cgd;
real Vds_cgg, Vds_cgs, Vds_cgd;
real Lg_cgg, Lg_cgs, Lg_cgd;
real Vgsraw, Vgdraw, dir;
real Vdi, Vsi;

real h1_0, h1_1, h1_2, h1_3, h1_4, h1_5, h1_6, h1_7, h1_8, h1_9, h1_10, h1_11, h1_12, h1_13, h1_14, h1_15, h1_16, h1_17, h1_18, h1_19, h1_20, h1_21, h1_22, h1_23, h1_24;
real h2_0, h2_1, h2_2, h2_3, h2_4, h2_5, h2_6, h2_7, h2_8, h2_9, h2_10, h2_11, h2_12, h2_13, h2_14;
real hcgg1_0, hcgg1_1, hcgg1_2, hcgg1_3, hcgg1_4, hcgg1_5, hcgg1_6, hcgg1_7, hcgg1_8, hcgg1_9, hcgg1_10, hcgg1_11, hcgg1_12, hcgg1_13, hcgg1_14, hcgg1_15, hcgg1_16, hcgg1_17, hcgg1_18, hcgg1_19, hcgg1_20, hcgg1_21, hcgg1_22, hcgg1_23, hcgg1_24;
real hcgg2_0, hcgg2_1, hcgg2_2, hcgg2_3, hcgg2_4, hcgg2_5, hcgg2_6, hcgg2_7, hcgg2_8, hcgg2_9, hcgg2_10, hcgg2_11;
real hcgs1_0, hcgs1_1, hcgs1_2, hcgs1_3, hcgs1_4, hcgs1_5, hcgs1_6, hcgs1_7, hcgs1_8, hcgs1_9, hcgs1_10, hcgs1_11, hcgs1_12, hcgs1_13, hcgs1_14, hcgs1_15, hcgs1_16, hcgs1_17, hcgs1_18, hcgs1_19, hcgs1_20, hcgs1_21, hcgs1_22, hcgs1_23, hcgs1_24;
real hcgs2_0, hcgs2_1, hcgs2_2, hcgs2_3, hcgs2_4, hcgs2_5, hcgs2_6, hcgs2_7, hcgs2_8, hcgs2_9, hcgs2_10, hcgs2_11;
real hcgd1_0, hcgd1_1, hcgd1_2, hcgd1_3, hcgd1_4, hcgd1_5, hcgd1_6, hcgd1_7, hcgd1_8, hcgd1_9, hcgd1_10, hcgd1_11, hcgd1_12, hcgd1_13, hcgd1_14, hcgd1_15, hcgd1_16, hcgd1_17, hcgd1_18, hcgd1_19, hcgd1_20, hcgd1_21, hcgd1_22, hcgd1_23, hcgd1_24;
real hcgd2_0, hcgd2_1, hcgd2_2, hcgd2_3, hcgd2_4, hcgd2_5, hcgd2_6, hcgd2_7, hcgd2_8, hcgd2_9, hcgd2_10, hcgd2_11;
real Qgd, Qgs;

analog begin
	Vg = V(g);
	Vs = V(s);
	Vd = V(d);
    Vgsraw = Vg-Vs ;
    Vgdraw = Vg-Vd ;
if (Vgsraw>=Vgdraw) begin
	Vgs = ((Vg-Vs) - MinVg - vth) * normVg ;
	dir = 1 ;
end
else begin
	Vgs = ((Vg-Vd) - MinVg - vth) * normVg ;
	dir = -1 ;
end

	Vds = (abs(Vd-Vs) - MinVd) * normVd ;
    temp = (Temp - MinTemperature) * normTemperature ;

h1_0 = tanh(-0.28592426*Vgs+-0.06702367*Vds+-0.08783989*temp+0.0067680436);
h1_1 = tanh(-1.6092799*Vgs+-0.12605947*Vds+-0.17968784*temp+0.54375905);
h1_2 = tanh(1.5498995*Vgs+0.3315316*Vds+0.0943371*temp+-0.45883578);
h1_3 = tanh(0.12403043*Vgs+26.24024*Vds+-0.1943599*temp+0.24634585);
h1_4 = tanh(1.3199015*Vgs+-0.40899107*Vds+-0.2094073*temp+-0.24722761);
h1_5 = tanh(0.024501583*Vgs+-0.8608088*Vds+0.29308912*temp+-0.112548515);
h1_6 = tanh(1.5527725*Vgs+-0.61565727*Vds+0.36785313*temp+-0.13833816);
h1_7 = tanh(1.3696343*Vgs+0.12640908*Vds+-0.034853674*temp+-0.38525924);
h1_8 = tanh(0.18927237*Vgs+4.22485*Vds+0.0035250993*temp+0.0069946116);
h1_9 = tanh(0.28805238*Vgs+-0.89368033*Vds+-0.04291129*temp+-0.20957614);
h1_10 = tanh(-0.5630334*Vgs+0.40854126*Vds+0.14443481*temp+-0.020956127);
h1_11 = tanh(0.6383204*Vgs+0.18731213*Vds+0.042884268*temp+0.11418921);
h1_12 = tanh(-1.9238741*Vgs+0.20356163*Vds+0.046317082*temp+0.4473457);
h1_13 = tanh(0.72867626*Vgs+0.55179775*Vds+0.054344997*temp+-0.42232636);
h1_14 = tanh(0.46908432*Vgs+-1.7034792*Vds+0.005542747*temp+-0.29907936);
h1_15 = tanh(0.46981966*Vgs+-0.95766515*Vds+-0.31924057*temp+-0.16248505);
h1_16 = tanh(0.75012594*Vgs+-0.20926645*Vds+-0.791194*temp+-0.4131879);
h1_17 = tanh(0.7425482*Vgs+0.26380008*Vds+-0.47565517*temp+-0.25262675);
h1_18 = tanh(1.056179*Vgs+-0.11587704*Vds+0.31056657*temp+-0.5535298);
h1_19 = tanh(-0.333013*Vgs+-0.34832633*Vds+-0.0012565522*temp+-0.25507933);
h1_20 = tanh(2.6132076*Vgs+0.054355435*Vds+0.0004715295*temp+-0.6599154);
h1_21 = tanh(1.4119958*Vgs+-0.45710495*Vds+0.023563957*temp+0.006727849);
h1_22 = tanh(-0.33865604*Vgs+0.19638713*Vds+-0.05109412*temp+0.061950322);
h1_23 = tanh(0.42726088*Vgs+0.032681573*Vds+0.25068167*temp+-0.3102945);
h1_24 = tanh(1.3542689*Vgs+0.2982216*Vds+-0.03362043*temp+-0.34688818);

h2_0 = tanh(0.42215854*h1_0+-3.8255527*h1_1+3.3679347*h1_2+0.34068075*h1_3+1.4096874*h1_4+0.25527164*h1_5+2.1314104*h1_6+0.65355766*h1_7+0.35801294*h1_8+0.27639532*h1_9+-0.5986733*h1_10+-0.15155707*h1_11+-1.2113125*h1_12+2.5723534*h1_13+0.38289347*h1_14+0.34149635*h1_15+1.8612895*h1_16+1.4502211*h1_17+2.5911336*h1_18+-0.39992997*h1_19+4.5355477*h1_20+1.2487231*h1_21+-0.4528761*h1_22+0.23059928*h1_23+1.4577724*h1_24+-0.12806317);
h2_1 = tanh(-0.2897152*h1_0+-0.06732502*h1_1+0.20790729*h1_2+-0.020742888*h1_3+-0.020292412*h1_4+0.008152077*h1_5+-0.099051334*h1_6+0.064633496*h1_7+-0.041419677*h1_8+0.23596765*h1_9+-0.040046755*h1_10+0.09530706*h1_11+-0.20216942*h1_12+-0.17708197*h1_13+-0.29437384*h1_14+0.11567*h1_15+-0.057147875*h1_16+-0.21881399*h1_17+-0.12038357*h1_18+0.15194868*h1_19+-0.019380629*h1_20+-0.113203794*h1_21+0.22572924*h1_22+-0.19804193*h1_23+0.03870036*h1_24+-0.060798258);
h2_2 = tanh(-0.1333492*h1_0+0.22702329*h1_1+0.051427606*h1_2+-0.3964539*h1_3+0.2002988*h1_4+0.25544697*h1_5+0.20137933*h1_6+0.1339328*h1_7+0.31964722*h1_8+0.3360793*h1_9+-0.37681308*h1_10+-0.17251156*h1_11+-0.21740042*h1_12+-0.47291383*h1_13+0.19252431*h1_14+-0.06693297*h1_15+-0.29903212*h1_16+-0.25046158*h1_17+0.00020754895*h1_18+0.46167383*h1_19+0.17399949*h1_20+0.43655425*h1_21+0.08810863*h1_22+-0.932058*h1_23+0.1263524*h1_24+0.04224123);
h2_3 = tanh(0.18490563*h1_0+-0.08879764*h1_1+0.38423473*h1_2+0.01566467*h1_3+-0.04527701*h1_4+-0.06565292*h1_5+-0.096548714*h1_6+-0.28338835*h1_7+-0.041297995*h1_8+-0.358482*h1_9+-0.031944573*h1_10+0.058842774*h1_11+-0.19615647*h1_12+-0.17142119*h1_13+0.25885332*h1_14+-0.15311387*h1_15+0.095732346*h1_16+-0.15696622*h1_17+0.20362134*h1_18+-0.11221699*h1_19+-0.21796194*h1_20+0.19591531*h1_21+0.014292451*h1_22+-0.39690772*h1_23+-0.029151393*h1_24+-0.13974145);
h2_4 = tanh(-0.16058215*h1_0+-0.22499323*h1_1+0.25130656*h1_2+-0.10765868*h1_3+0.3588954*h1_4+-0.080117725*h1_5+0.43212494*h1_6+0.00088239234*h1_7+-0.1452809*h1_8+0.16689332*h1_9+-0.2553431*h1_10+0.4959288*h1_11+-0.7495434*h1_12+0.30826342*h1_13+0.24864015*h1_14+-0.026339108*h1_15+-0.023932017*h1_16+0.16281366*h1_17+0.2518675*h1_18+-0.31149754*h1_19+0.7070027*h1_20+0.28127873*h1_21+-0.29230922*h1_22+-0.17010093*h1_23+0.4002839*h1_24+0.2754889);
h2_5 = tanh(0.3310022*h1_0+0.56071234*h1_1+-0.82205915*h1_2+-0.85658807*h1_3+0.0020524063*h1_4+0.043994248*h1_5+0.26320192*h1_6+-0.68394154*h1_7+-1.2165586*h1_8+0.5023988*h1_9+-0.06788494*h1_10+-0.20805858*h1_11+0.64336646*h1_12+-0.43591714*h1_13+-0.2022848*h1_14+0.28789437*h1_15+0.072500184*h1_16+-0.2310882*h1_17+-0.53890926*h1_18+0.47280705*h1_19+-1.0943342*h1_20+0.28481036*h1_21+0.13187262*h1_22+-0.60798764*h1_23+-0.7708423*h1_24+-0.20447081);
h2_6 = tanh(0.14034876*h1_0+0.0396208*h1_1+0.04745722*h1_2+0.009924122*h1_3+0.031566806*h1_4+-0.12571567*h1_5+0.03991798*h1_6+-0.24506004*h1_7+-0.0055795866*h1_8+0.27690172*h1_9+-0.1363329*h1_10+0.04281028*h1_11+-0.091500916*h1_12+0.033253882*h1_13+-0.07254292*h1_14+-0.03675601*h1_15+-0.0645673*h1_16+0.20165752*h1_17+-0.002945426*h1_18+-0.06307051*h1_19+-0.012636688*h1_20+-0.17029223*h1_21+-0.057230633*h1_22+0.3895698*h1_23+-0.1288781*h1_24+0.07806638);
h2_7 = tanh(0.1843469*h1_0+0.5411274*h1_1+-0.6746809*h1_2+0.24107872*h1_3+-0.42057484*h1_4+0.070392616*h1_5+-0.6725785*h1_6+-0.15400639*h1_7+0.044143446*h1_8+0.13432841*h1_9+-0.07140533*h1_10+-0.53162634*h1_11+0.61643434*h1_12+-0.38574785*h1_13+0.09662076*h1_14+-0.27504554*h1_15+-0.13095285*h1_16+-0.20437248*h1_17+0.09993994*h1_18+0.34440002*h1_19+-0.692173*h1_20+-0.21369088*h1_21+0.051436227*h1_22+-0.25365183*h1_23+-0.29155236*h1_24+-0.02694626);
h2_8 = tanh(0.21890645*h1_0+2.0437617*h1_1+-1.6690644*h1_2+-0.15880342*h1_3+-0.8746593*h1_4+0.17236382*h1_5+-0.18973051*h1_6+-1.6451639*h1_7+-0.22171696*h1_8+-0.20177227*h1_9+0.5450437*h1_10+-0.44039282*h1_11+1.2662258*h1_12+-0.55084354*h1_13+-0.5464852*h1_14+-0.013155775*h1_15+-0.31369033*h1_16+-0.39267975*h1_17+-1.1856581*h1_18+0.26513603*h1_19+-2.7830615*h1_20+-0.38960716*h1_21+0.40291134*h1_22+-0.48538056*h1_23+-1.1120297*h1_24+0.11999895);
h2_9 = tanh(-0.0682565*h1_0+-0.10407815*h1_1+-0.24021201*h1_2+-0.17677878*h1_3+0.066331424*h1_4+0.20032877*h1_5+-0.30394885*h1_6+-0.10002601*h1_7+-0.62359047*h1_8+0.4614097*h1_9+-0.20462932*h1_10+-0.1256796*h1_11+-0.06910795*h1_12+-0.27943924*h1_13+0.104155295*h1_14+0.37833506*h1_15+0.24159892*h1_16+-0.38274264*h1_17+0.12570567*h1_18+0.0007345874*h1_19+-0.25703496*h1_20+0.08251573*h1_21+-0.27137786*h1_22+0.2648995*h1_23+0.08658076*h1_24+-0.005174303);
h2_10 = tanh(0.037500586*h1_0+0.07731997*h1_1+-0.2514098*h1_2+-0.14633518*h1_3+-0.38853595*h1_4+-0.2501862*h1_5+0.006983488*h1_6+0.016741028*h1_7+-0.24670805*h1_8+0.3163769*h1_9+0.11969159*h1_10+-0.1853242*h1_11+-0.039921496*h1_12+0.5427094*h1_13+-0.2442945*h1_14+-0.4133547*h1_15+-0.3123006*h1_16+0.41367644*h1_17+0.38421002*h1_18+0.0703777*h1_19+0.17340992*h1_20+0.12406262*h1_21+-0.3737657*h1_22+0.84047955*h1_23+0.008226619*h1_24+-0.32073462);
h2_11 = tanh(-0.49611756*h1_0+0.024960553*h1_1+0.23770541*h1_2+2.6464984*h1_3+-0.9439325*h1_4+0.114140324*h1_5+-0.42534637*h1_6+-0.06312589*h1_7+0.7694435*h1_8+-0.45387942*h1_9+0.14121422*h1_10+0.29054785*h1_11+0.047565535*h1_12+0.5393677*h1_13+-1.3105372*h1_14+-0.8945989*h1_15+-0.12651025*h1_16+0.2913911*h1_17+-0.38663077*h1_18+-0.57093143*h1_19+-0.06561967*h1_20+0.26215944*h1_21+-0.21863891*h1_22+0.56570935*h1_23+0.8665978*h1_24+0.080159254);
h2_12 = tanh(0.28439975*h1_0+1.242715*h1_1+-1.5640124*h1_2+-0.4696829*h1_3+-0.6505074*h1_4+0.1750226*h1_5+-0.42711616*h1_6+-1.4733928*h1_7+0.16893505*h1_8+-0.27872834*h1_9+-0.00041338996*h1_10+-0.17256701*h1_11+1.1023184*h1_12+-1.2370105*h1_13+0.13468917*h1_14+-0.21706744*h1_15+-0.38757473*h1_16+-0.5735794*h1_17+-0.87131196*h1_18+-0.24753724*h1_19+-1.9064549*h1_20+-0.40458915*h1_21+0.04271358*h1_22+-0.85639274*h1_23+-0.57139015*h1_24+0.21874373);
h2_13 = tanh(0.36955562*h1_0+1.6894277*h1_1+-1.5308183*h1_2+1.105608*h1_3+-0.5260025*h1_4+-0.22975041*h1_5+-0.80039287*h1_6+-0.2754263*h1_7+0.1655902*h1_8+0.1694295*h1_9+0.22673145*h1_10+-0.6292468*h1_11+0.4979649*h1_12+-0.53500575*h1_13+-0.5943239*h1_14+-0.44488263*h1_15+-0.5554264*h1_16+-0.75866705*h1_17+-0.6552824*h1_18+0.39077058*h1_19+-1.7795919*h1_20+-0.69140595*h1_21+-0.21355607*h1_22+-0.18305044*h1_23+-0.66085905*h1_24+-0.44025654);
h2_14 = tanh(0.53777266*h1_0+0.22904433*h1_1+-0.3008821*h1_2+-1.9013842*h1_3+0.0235085*h1_4+0.099849164*h1_5+-0.09527431*h1_6+-0.29822162*h1_7+-0.9792165*h1_8+0.017824057*h1_9+-0.34995967*h1_10+-0.10209463*h1_11+0.262975*h1_12+-0.15286419*h1_13+0.6059105*h1_14+0.28492326*h1_15+0.47210735*h1_16+0.18529014*h1_17+-0.07594537*h1_18+0.323928*h1_19+-0.6816465*h1_20+0.085328706*h1_21+-0.31698287*h1_22+0.2524608*h1_23+-0.1757256*h1_24+-0.36482933);
y = 0.3092515*h2_0+-0.0039857416*h2_1+-0.04699469*h2_2+-0.0048941523*h2_3+0.35384405*h2_4+0.101601765*h2_5+0.0012679*h2_6+0.34616756*h2_7+0.4377402*h2_8+-0.38769147*h2_9+0.05957597*h2_10+0.4842403*h2_11+-0.3802203*h2_12+-0.2044264*h2_13+0.37577152*h2_14+0.0872803;


//Cgd = pow(10, (y_cgd/normO_cgd + MinO_cgd))*W/15; //traning width was 15um
//Cgs = pow(10, (y_cgs/normO_cgs + MinO_cgs))*W/15;
//Cgg = Cgd+Cgs;

Id = pow(10, (y/normI + MinI));
//I(g, d) <+ Cgd*ddt(Vg-Vd) ;
//I(g, s) <+ Cgs*ddt(Vg-Vs) ;

if (Vgsraw >= Vgdraw) begin
	I(d, s) <+ dir*Id*W;
end

else begin
	I(d, s) <+ dir*Id*W;
end

end
endmodule

